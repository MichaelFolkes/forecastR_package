% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Module_doBoot.R
\name{doBoot}
\alias{doBoot}
\title{Bootstrap to get a forecast interval}
\usage{
doBoot(
  data,
  args.fitmodel = list(model = "Naive", settings = list(avg.yrs = 3)),
  args.calcfc = list(fc.yr = NULL, settings = NULL),
  args.boot = list(boot.type = c("meboot", "stlboot"), boot.n = 100, plot.diagnostics =
    FALSE),
  full.out = FALSE,
  plot.out = FALSE
)
}
\arguments{
\item{data}{A list. Output of the function \code{\link{prepData}}.}

\item{args.fitmodel}{A list with details depending on model.}

\item{args.calcfc}{A list.}

\item{args.boot}{A list comprising a vector named \code{boot.type} with one of two possible values: "meboot" (maximum entropy bootstrap) or "stlboot" (STL/Loess bootstrap).}

\item{full.out}{A Boolean. Default is FALSE. See value section for details.}

\item{plot.out}{A Boolean. Default is FALSE. Create output plots.}
}
\value{
A vector with percentile values for the interval. If \code{full.out}
  is TRUE, then a vector with all bootstrapped values.
}
\description{
Bootstrap to get a forecast interval
}
\details{
The steps and subroutines differ by model, but the output is the
  same regardless. If time series model: use meboot subroutine as default,
  stlboot as option. Also have Box-Cox on/off option. If sibreg model: use
  "classic" bootstrap by dropping some obs and refitting. If naive model: use
  retrospective resids (as in Fraser Sox FC? -> check details)  (why not same
  as time series model?). A separate bootstrap interval will be done as part
  of the doRetro() module. The structure of this function is generic, and it
  runs for all the model types. However, bootstrapped intervals using this
  approach may not be appropriate for some models.
}
